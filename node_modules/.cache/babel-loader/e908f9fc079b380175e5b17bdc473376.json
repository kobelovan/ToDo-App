{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _createHelper = require('./createHelper');\n\nvar _createHelper2 = _interopRequireDefault(_createHelper);\n\nvar _createElement = require('./createElement');\n\nvar _createElement2 = _interopRequireDefault(_createElement);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar branch = function branch(test, left, right) {\n  return function (BaseComponent) {\n    return function (_React$Component) {\n      _inherits(_class2, _React$Component);\n\n      function _class2(props, context) {\n        _classCallCheck(this, _class2);\n\n        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(_class2).call(this, props, context));\n\n        _this.LeftComponent = null;\n        _this.RightComponent = null;\n\n        _this.computeChildComponent(_this.props);\n\n        return _this;\n      }\n\n      _createClass(_class2, [{\n        key: 'computeChildComponent',\n        value: function computeChildComponent(props) {\n          if (test(props)) {\n            this.LeftComponent = this.LeftComponent || left(BaseComponent);\n            this.Component = this.LeftComponent;\n          } else {\n            this.RightComponent = this.RightComponent || right(BaseComponent);\n            this.Component = this.RightComponent;\n          }\n        }\n      }, {\n        key: 'componentWillReceiveProps',\n        value: function componentWillReceiveProps(nextProps) {\n          this.computeChildComponent(nextProps);\n        }\n      }, {\n        key: 'render',\n        value: function render() {\n          var Component = this.Component;\n          return (0, _createElement2.default)(Component, this.props);\n        }\n      }]);\n\n      return _class2;\n    }(_react2.default.Component);\n  };\n};\n\nexports.default = (0, _createHelper2.default)(branch, 'branch');","map":null,"metadata":{},"sourceType":"script"}