{"ast":null,"code":"import _classCallCheck from \"/Users/kobelovan/Desktop/workspace/React-TODO-App-DDExample/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kobelovan/Desktop/workspace/React-TODO-App-DDExample/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kobelovan/Desktop/workspace/React-TODO-App-DDExample/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kobelovan/Desktop/workspace/React-TODO-App-DDExample/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kobelovan/Desktop/workspace/React-TODO-App-DDExample/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kobelovan/Desktop/workspace/React-TODO-App-DDExample/src/components/wrappers/StateProvider.js\";\nimport React, { Component } from 'react';\nimport { FILTER_ALL } from '../../services/filter';\nimport { MODE_CREATE, MODE_NONE } from '../../services/mode';\nimport { objectWithOnly, wrapChildrenWith } from '../../util/common';\nimport { getAll, addToList, updateStatus } from '../../services/todo';\n\nvar StateProvider = /*#__PURE__*/function (_Component) {\n  _inherits(StateProvider, _Component);\n\n  function StateProvider() {\n    var _this;\n\n    _classCallCheck(this, StateProvider);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(StateProvider).call(this));\n    _this.state = {\n      query: '',\n      mode: MODE_CREATE,\n      filter: FILTER_ALL,\n      list: getAll()\n    };\n    return _this;\n  }\n\n  _createClass(StateProvider, [{\n    key: \"render\",\n    value: function render() {\n      var children = wrapChildrenWith(this.props.children, {\n        data: this.state,\n        actions: objectWithOnly(this, ['addNew', 'changeFilter', 'changeStatus', 'changeMode', 'setSearchQuery'])\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 16\n        }\n      }, children);\n    }\n  }, {\n    key: \"addNew\",\n    value: function addNew(text) {\n      var updatedList = addToList(this.state.list, {\n        text: text,\n        completed: false\n      });\n      this.setState({\n        list: updatedList\n      });\n    }\n  }, {\n    key: \"changeFilter\",\n    value: function changeFilter(filter) {\n      this.setState({\n        filter: filter\n      });\n    }\n  }, {\n    key: \"changeStatus\",\n    value: function changeStatus(itemId, completed) {\n      var updatedList = updateStatus(this.state.list, itemId, completed);\n      this.setState({\n        list: updatedList\n      });\n    }\n  }, {\n    key: \"changeMode\",\n    value: function changeMode() {\n      var mode = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : MODE_NONE;\n      this.setState({\n        mode: mode\n      });\n    }\n  }, {\n    key: \"setSearchQuery\",\n    value: function setSearchQuery(text) {\n      this.setState({\n        query: text || ''\n      });\n    }\n  }]);\n\n  return StateProvider;\n}(Component);\n\nexport default StateProvider;","map":{"version":3,"sources":["/Users/kobelovan/Desktop/workspace/React-TODO-App-DDExample/src/components/wrappers/StateProvider.js"],"names":["React","Component","FILTER_ALL","MODE_CREATE","MODE_NONE","objectWithOnly","wrapChildrenWith","getAll","addToList","updateStatus","StateProvider","state","query","mode","filter","list","children","props","data","actions","text","updatedList","completed","setState","itemId"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,UAAR,QAAyB,uBAAzB;AACA,SAAQC,WAAR,EAAqBC,SAArB,QAAqC,qBAArC;AACA,SAAQC,cAAR,EAAwBC,gBAAxB,QAA+C,mBAA/C;AACA,SAAQC,MAAR,EAAgBC,SAAhB,EAA2BC,YAA3B,QAA8C,qBAA9C;;IAEMC,a;;;AACF,2BAAc;AAAA;;AAAA;;AACV;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,EADE;AAETC,MAAAA,IAAI,EAAEV,WAFG;AAGTW,MAAAA,MAAM,EAAEZ,UAHC;AAITa,MAAAA,IAAI,EAAER,MAAM;AAJH,KAAb;AAFU;AAQb;;;;6BAEQ;AACL,UAAIS,QAAQ,GAAGV,gBAAgB,CAAC,KAAKW,KAAL,CAAWD,QAAZ,EAAsB;AACjDE,QAAAA,IAAI,EAAE,KAAKP,KADsC;AAEjDQ,QAAAA,OAAO,EAAEd,cAAc,CAAC,IAAD,EAAO,CAAC,QAAD,EAAW,cAAX,EAA2B,cAA3B,EAA2C,YAA3C,EAAyD,gBAAzD,CAAP;AAF0B,OAAtB,CAA/B;AAKA,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMW,QAAN,CAAP;AACH;;;2BAEMI,I,EAAM;AACT,UAAIC,WAAW,GAAGb,SAAS,CAAC,KAAKG,KAAL,CAAWI,IAAZ,EAAkB;AAACK,QAAAA,IAAI,EAAJA,IAAD;AAAOE,QAAAA,SAAS,EAAE;AAAlB,OAAlB,CAA3B;AAEA,WAAKC,QAAL,CAAc;AAACR,QAAAA,IAAI,EAAEM;AAAP,OAAd;AACH;;;iCAEYP,M,EAAQ;AACjB,WAAKS,QAAL,CAAc;AAACT,QAAAA,MAAM,EAANA;AAAD,OAAd;AACH;;;iCAEYU,M,EAAQF,S,EAAW;AAC5B,UAAMD,WAAW,GAAGZ,YAAY,CAAC,KAAKE,KAAL,CAAWI,IAAZ,EAAkBS,MAAlB,EAA0BF,SAA1B,CAAhC;AAEA,WAAKC,QAAL,CAAc;AAACR,QAAAA,IAAI,EAAEM;AAAP,OAAd;AACH;;;iCAE4B;AAAA,UAAlBR,IAAkB,uEAAXT,SAAW;AACzB,WAAKmB,QAAL,CAAc;AAACV,QAAAA,IAAI,EAAJA;AAAD,OAAd;AACH;;;mCAEcO,I,EAAM;AACjB,WAAKG,QAAL,CAAc;AAACX,QAAAA,KAAK,EAAEQ,IAAI,IAAI;AAAhB,OAAd;AACH;;;;EA1CuBnB,S;;AA6C5B,eAAeS,aAAf","sourcesContent":["import React, {Component} from 'react';\nimport {FILTER_ALL} from '../../services/filter';\nimport {MODE_CREATE, MODE_NONE} from '../../services/mode';\nimport {objectWithOnly, wrapChildrenWith} from '../../util/common';\nimport {getAll, addToList, updateStatus} from '../../services/todo';\n\nclass StateProvider extends Component {\n    constructor() {\n        super();\n        this.state = {\n            query: '',\n            mode: MODE_CREATE,\n            filter: FILTER_ALL,\n            list: getAll()\n        }\n    }\n\n    render() {\n        let children = wrapChildrenWith(this.props.children, {\n            data: this.state,\n            actions: objectWithOnly(this, ['addNew', 'changeFilter', 'changeStatus', 'changeMode', 'setSearchQuery'])\n        });\n\n        return <div>{children}</div>;\n    }\n\n    addNew(text) {\n        let updatedList = addToList(this.state.list, {text, completed: false});\n\n        this.setState({list: updatedList});\n    }\n\n    changeFilter(filter) {\n        this.setState({filter});\n    }\n\n    changeStatus(itemId, completed) {\n        const updatedList = updateStatus(this.state.list, itemId, completed);\n\n        this.setState({list: updatedList});\n    }\n\n    changeMode(mode = MODE_NONE) {\n        this.setState({mode});\n    }\n\n    setSearchQuery(text) {\n        this.setState({query: text || ''});\n    }\n}\n\nexport default StateProvider;\n"]},"metadata":{},"sourceType":"module"}